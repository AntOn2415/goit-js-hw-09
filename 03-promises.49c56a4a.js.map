{"mappings":"qhBACA,IAAAA,EAAAC,EAAA,SAES,MAAHC,EAAOC,SAASC,cAAc,SAIf,SAAZC,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GAEtC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACLN,EAEFI,EAAQ,C,SAAEN,E,MAAUC,IAGpBM,EAAO,C,SAAEP,E,MAAUC,GAAQ,GAE5BA,EAAM,G,CAdbL,EAAKa,iBAAiB,UAkBN,SAAMC,GACpBA,EAAEC,iBAGsB,IAApBC,EAAQC,OAAOjB,EAAKkB,SAASb,MAAMc,OACvC,MAAMC,EAAOH,OAAOjB,EAAKkB,SAASE,KAAKD,OACjCE,EAASJ,OAAOjB,EAAKkB,SAASG,OAAOF,OAEpB,IAAlB,IAAIG,EAAW,EAAGA,GAAYD,EAAQC,IACzCnB,EAAcmB,EAAUN,GACrBO,MAAK,EAACnB,SAAEA,EAAQC,MAAEA,MACjBmB,EAAA1B,GAAS2B,OAAOC,QACd,uBAAqBtB,QAAiBC,MAAU,IAGnDsB,OAAM,EAACvB,SAAEA,EAAQC,MAAEA,MAClBmB,EAAA1B,GAAS2B,OAAOG,QACd,sBAAoBxB,QAAiBC,MAAU,IAIrDW,GAASI,EAEXpB,EAAK6B,O","sources":["src/js/03-promises.js"],"sourcesContent":["// ________робочий варіант але деколи перестае робить\nimport Notiflix from 'notiflix';\n// посилання\nconst form = document.querySelector('.form');\n\nform.addEventListener('submit', onFormSubmit);\n// промисифікація функції\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        // Fulfill\n        resolve({ position, delay });\n      } else {\n        // Reject\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n// делегування події\nfunction onFormSubmit(e) {\n  e.preventDefault();\n  // отримуємо посилання на імпути\n  // отримуємо значення імпутів\n  let delay = Number(form.elements.delay.value);\n  const step = Number(form.elements.step.value);\n  const amount = Number(form.elements.amount.value);\n  // кількість виклику функції\n  for (let position = 1; position <= amount; position++) {\n    createPromise(position, delay)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n\n      });\n    delay += step;\n  }\n  form.reset()\n    }\n\n// ________робочий варіант але тільки не на гітхабі\n\n// import Notiflix from 'notiflix';\n// // посилання\n// const form = document.querySelector('.form');\n\n// form.addEventListener('submit', onFormSubmit);\n\n// // делегування події\n// function onFormSubmit(e) {\n//   e.preventDefault();\n//   // отримуємо посилання на імпути\n//   // отримуємо значення імпутів\n//   let delay = Number(form.elements.delay.value);\n//   const step = Number(form.elements.step.value);\n//   const amount = Number(form.elements.amount.value);\n\n// // промисифікація функції\n// function createPromise(position, delay) {\n//   const shouldResolve = Math.random() > 0.3;\n\n//   return new Promise((resolve, reject) => {\n//     setTimeout(() => {\n//       if (shouldResolve) {\n//         // Fulfill\n//         resolve({ position, delay });\n//       } else {\n//         // Reject\n//         reject({ position, delay });\n//       }\n//     }, delay);\n//   });\n// }\n\n//   // кількість виклику функції\n//   for (let position = 1; position <= amount; position++) {\n//     createPromise(position, delay)\n//       .then(({ position, delay }) => {\n//         Notiflix.Notify.success(\n//           `✅ Fulfilled promise ${position} in ${delay}ms`\n//         );\n//       })\n//       .catch(({ position, delay }) => {\n//         Notiflix.Notify.failure(\n//           `❌ Rejected promise ${position} in ${delay}ms`\n//         );\n        \n//       });\n//     delay += step;\n//   }\n//   form.reset();\n//     }\n\n//  ______________Робочий варіант, але я не розумію чого так не можна робити\n// import Notiflix from 'notiflix';\n\n// // // посилання\n// const form = document.querySelector('.form');\n\n// // промисификация функції\n// function createPromise(position, delay, delayStep) {\n//   const shouldResolve = Math.random() > 0.3;\n\n//  delay = delay + (position - 1) * delayStep;\n\n//   return new Promise((resolve, reject) => {\n//       if (shouldResolve) {\n//         // Fulfill\n//         resolve({ position, delay});\n//       } else {\n//         // Reject\n//         reject({ position, delay });\n//       }\n//   });\n// };\n\n// // дилегування події\n// form.addEventListener('submit', e => {\n//   e.preventDefault();\n// // отримуемо посилання на імпути\n//   const delayInput = form.elements.delay;\n//   const stepInput = form.elements.step;\n//   const amountInput = form.elements.amount;\n// // отримуемо значення імпутів\n//   const delay = parseInt(delayInput.value);\n//   const step = parseInt(stepInput.value);\n//   const amount = parseInt(amountInput.value);\n  \n//     let position = 1;\n//     let interval;\n//     // кількість визову функції\n//     interval = setInterval(() => {\n//   createPromise(position, delay, step)\n//   .then(({ position, delay }) => {\n//   Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n// })\n// .catch(({ position, delay}) => {\n//   Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n// });\n// if  (++position > amount ) {\n//   clearInterval(interval);\n// form.reset();\n// }\n//     }, step);\n// });"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$form","document","querySelector","$47d4ff9957288465$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","addEventListener","e","preventDefault","delay1","Number","elements","value","step","amount","position1","then","$parcel$interopDefault","Notify","success","catch","failure","reset"],"version":3,"file":"03-promises.49c56a4a.js.map"}