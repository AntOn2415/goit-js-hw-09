{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAGMC,EAAOC,SAASC,cAAc,SAkBpBF,EAAXG,iBAAiB,UAAU,SAAAC,GAC9BA,EAAEC,iBAEwB,IAApBC,EAAaN,EAAKO,SAASC,MAC3BC,EAAYT,EAAKO,SAASG,KAC1BC,EAAcX,EAAKO,SAASK,OAE5BC,EAAQC,SAASR,EAAWS,OAC5BL,EAAOI,SAASL,EAAUM,OAC1BH,EAASE,SAASH,EAAYI,OAE9BC,EAAW,EAEXC,EAAWC,aAAY,WA5BV,IAAEC,EAAUX,EAAOY,EAChCC,GADeF,EA8BPH,EA9BiBR,EA8BPK,EA9BcO,EA8BPV,EA7BzBW,EAAgBC,KAAKC,SAAW,GACvCf,IAAiBW,EAAW,GAAKC,EACzB,IAAII,SAAQ,SAACC,EAASC,GACrBL,EAEFI,EAAQ,CAAEN,WAAUX,UAGpBkB,EAAO,CAAEP,WAAUX,S,KAqBYmB,MAAK,SAAAC,G,IAAGT,EAAQS,EAART,SAAUX,EAAKoB,EAALpB,MACvDqB,EAAA/B,GAASgC,OAAOC,QAAQ,uBAAwCC,OAAfb,EAAS,QAAYa,OAANxB,EAAM,M,IAGvEyB,OAAM,SAAAL,G,IAAGT,EAAQS,EAART,SAAUX,EAAKoB,EAALpB,MAClBqB,EAAA/B,GAASgC,OAAOI,QAAQ,sBAAqCF,OAAfb,EAAS,QAAYa,OAANxB,EAAM,M,KAG/DQ,GAAY,IAAMJ,IACtBuB,cAAclB,GAChBjB,EAAKoC,Q,GAEE1B,E","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\n// посилання\nconst form = document.querySelector('.form');\n\n// промисификация функції\nfunction createPromise(position, delay, delayStep) {\n  const shouldResolve = Math.random() > 0.3;\n delay = delay + (position - 1) * delayStep;\n  return new Promise((resolve, reject) => {\n      if (shouldResolve) {\n        // Fulfill\n        resolve({ position, delay});\n      } else {\n        // Reject\n        reject({ position, delay });\n      }\n  });\n};\n\n// дилегування події\nform.addEventListener('submit', e => {\n  e.preventDefault();\n// отримуемо посилання на імпути\n  const delayInput = form.elements.delay;\n  const stepInput = form.elements.step;\n  const amountInput = form.elements.amount;\n// отримуемо значення імпутів\n  const delay = parseInt(delayInput.value);\n  const step = parseInt(stepInput.value);\n  const amount = parseInt(amountInput.value);\n  \n    let position = 1;\n    // кількість визову функції\n    let interval = setInterval(() => {\n \n  createPromise(position, delay, step).then(({ position, delay }) => {\n  Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n\n})\n.catch(({ position, delay}) => {\n  Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n  \n});\nif  ((position += 1) >= amount ) {\n  clearInterval(interval);\nform.reset();\n}\n    }, step);\n});\n\n"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$form","document","querySelector","addEventListener","e","preventDefault","delayInput","elements","delay","stepInput","step","amountInput","amount","delay1","parseInt","value","position1","interval","setInterval","position","delayStep","shouldResolve","Math","random","Promise","resolve","reject","then","param","$parcel$interopDefault","Notify","success","concat","catch","failure","clearInterval","reset"],"version":3,"file":"03-promises.6aea4961.js.map"}